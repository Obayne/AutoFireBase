name: Agent Orchestrator

on:
  workflow_dispatch:
  issues:
    types: [labeled]

jobs:
  scaffold:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.label.name, 'agent:auto')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run orchestrator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          python tools/agents/orchestrator.py "$GITHUB_EVENT_PATH"

      - name: Open PR for new branch (if any)
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const cp = require('child_process');
            // Detect branch name robustly in Actions (detached HEAD common)
            const ref = context.ref || '';
            const refName = ref.startsWith('refs/heads/') ? ref.replace('refs/heads/','') : (process.env.GITHUB_HEAD_REF || process.env.GITHUB_REF_NAME || '');
            const head = (refName && refName !== '') ? refName : null;
            if (!head || head === 'main' || head.startsWith('chore/')) {
              core.info('No feature branch detected for PR.');
              return;
            }
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const base = 'main';
            const title = `feat: ${head} (agent scaffold)`;
            const body = [
              'Automated scaffold for this issue by Agent Orchestrator.',
              '',
              'Includes minimal stub files and skipped tests to keep CI green.',
              'Please replace stubs with real implementations and enable tests.',
            ].join('\n');
            // Check if a PR from this head already exists
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'open', head: `${owner}:${head}` });
            if (prs.length === 0) {
              await github.rest.pulls.create({ owner, repo, head, base, title, body });
            } else {
              core.info(`PR already open: #${prs[0].number}`);
            }

