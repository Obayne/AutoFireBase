name: Assign Owners

on:
  workflow_dispatch:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled, reopened]

jobs:
  assign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    env:
      AREA_FRONTEND_OWNER: ${{ vars.AREA_FRONTEND_OWNER }}
      AREA_BACKEND_OWNER: ${{ vars.AREA_BACKEND_OWNER }}
      AREA_CAD_CORE_OWNER: ${{ vars.AREA_CAD_CORE_OWNER }}
      DEFAULT_PR_OWNER: ${{ vars.DEFAULT_PR_OWNER }}
    steps:
      - name: Assign new/updated issues
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue = context.payload.issue;
            const labels = (issue.labels || []).map(l => l.name);
            function pickAssignee(labels){
              if (labels.includes('area:frontend')) return process.env.AREA_FRONTEND_OWNER || owner;
              if (labels.includes('area:backend')) return process.env.AREA_BACKEND_OWNER || owner;
              if (labels.includes('area:cad_core')) return process.env.AREA_CAD_CORE_OWNER || owner;
              return owner;
            }
            const login = pickAssignee(labels);
            core.info(`Assigning @${login} to issue #${issue.number}`);
            await github.rest.issues.addAssignees({ owner, repo, issue_number: issue.number, assignees: [login] });

      - name: Batch-assign Sprint 01 issues (manual run)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issues = await github.paginate(github.rest.issues.listForRepo, { owner, repo, state: 'open', per_page: 100, labels: 'sprint:01' });
            for (const i of issues) {
              if ((i.assignees || []).length) { continue; }
              const labels = (i.labels || []).map(l => l.name);
              function pickAssignee(labels){
                if (labels.includes('area:frontend')) return process.env.AREA_FRONTEND_OWNER || owner;
                if (labels.includes('area:backend')) return process.env.AREA_BACKEND_OWNER || owner;
                if (labels.includes('area:cad_core')) return process.env.AREA_CAD_CORE_OWNER || owner;
                return owner;
              }
              const login = pickAssignee(labels);
              core.info(`Assigning @${login} to issue #${i.number}`);
              await github.rest.issues.addAssignees({ owner, repo, issue_number: i.number, assignees: [login] });
            }

      - name: Assign PRs
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr = context.payload.pull_request;
            const login = process.env.DEFAULT_PR_OWNER || owner;
            core.info(`Assigning @${login} to PR #${pr.number}`);
            await github.rest.issues.addAssignees({ owner, repo, issue_number: pr.number, assignees: [login] });

